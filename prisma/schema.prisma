// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Chat {
  uuid         String   @id @default(uuid())
  remember     Boolean  @default(false)
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @updatedAt
  version      String?  @db.VarChar(32)
  name         String   @db.VarChar(255)
  systemPrompt String?  @db.Text
  Prompt       Prompt[]
}

model Prompt {
  uuid         String   @id @default(uuid())
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @updatedAt
  isEnabled    Boolean  @default(true)
  isBusy       Boolean  @default(false)
  isSuccessful Boolean  @default(false)
  role         String?  @db.VarChar(16)
  prompt       String?  @db.Text
  chatUUID     String
  Chat         Chat     @relation(fields: [chatUUID], references: [uuid], onDelete: NoAction, onUpdate: NoAction, map: "Prompt_ibfk_1")

  @@index([chatUUID], map: "chatUUID")
}

model AuthUser {
  id           String        @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  email        String        @unique @db.VarChar(255)
  name         String        @db.VarChar(255)

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}
